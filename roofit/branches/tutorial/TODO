* Update Z event veto properly. Use baseline selection for the veto.
  Also, use z veto: 3rd lepton
* met cleaning addition: jet within cone 0.3 of lepton
* Trig efficiency correction port (minimally invasive - just use ROOT histograms)
* Fix default (systematic) histogram cuts in AnaVCrossSectionCandidate; add histos for trigger/efficiency variations
* Implement MissingETUtility



* Add overlap removal
* Upgrade to the latest ROOT version (for anaquick) - when 17.0.6.X is available on tier3

pileup nmu correction: 0.88 - ID people
                       0.83 - penn people, makes slopes the same
		       0.80 - best improvement in MET, et isolation variables (all calo distributions)

TODO: make overall agreement work for W plots (play with different values of pileup reweighting)
      study w_mt w_pt resolution
      njet - peter not as excited about
      bins of lepton pt (easiest)

roofit:
Check that Z TP errors don't change if I scale the lumi by a factor of 10
   (or alternatively, if I actually normalize the histograms)

Peter: nuclear option = mc11c - switch minbias back to pythia6 (for higgs analysis)
whichever one looks better and is used for the trigger efficiency
charge mis-id - won't work from Z's. Flip probability. Can't look at same-sign Z's
+ add bins of lepton pt
* TODO: use calo muons in tag-and-probe.

MCP mtg:
* understand systematics using special MC !!Validate the method by putting a shift by hand. Massimo will make samples
* run this method on MC directly
effect on the order of 0.2 TeV-1.

KS toy-MC study (performing a fit) - see if errors are correct. If yes, drop chi2 method.
For the "bad" cmb bin, look at a variation of akluit where the other muon is forced into a particular region.
Peter: does z resolution improve in data following the correction?

TODO: Z mass fit in bins of eta/phi - including on MC (confirm Kluit's problem)
      Z mass peak fit with alpgen; fit with/without pileup factors.
      Z mass peak at particle level (which is, however, after FSR/ISR)

IN PROGRESS:
Re-write db_* executable using classes that will automatically write out all latex output.
Basically, create python abstraction classes for every table. They can reference the database in the constructor.
Printing will occur in a correct manner automatically.
Use sequence of inheritance, starting from top-level document (that includes facilities to save and compile)

TrigFTKAna:
* add muon-jet overlap checking (remove jet is dR<0.5)
* add a word to AnaWCrossSectionCandidate saying if it's the best candidate at preselection level (compare results with/without)
* Rename ntuple variables for consistency (e.g., l_ prefix for isolation)
* ID efficiency via tag and probe (lX, lY, lZ)
  Create a completely separate ntuple (manually turned on though). The idea is to create mu-ID candidates. The AOD::id muons would 
  have a link to the closest-matched full muon (if any). Make sure smearing class can smear ID muons, too!
* come up with a way to combine truth and reco ntuples:
  Keep default truth ntuples
  Add (if MC) additional words to primary ntuple: keeping relevant information from truth ntuple
  This would need some matching: for a given W/Z candidate, it will seek the closest truth candidate.

Make bin-by-bin efficiency corrections for isolation (wrt combined) and trigger (wrt isolated).

conversion to truth level. Resolution is not negligible in MET. unfolding.
Peter: METRefFinal - METTruth; split into parallel and perpendicular to lepton axis components (later)
Handle bad charge-dependent modeling - even though QCD is fit in a charge-dependent fasion.

Issues:
* choose generator that models missing et best (!!!)
* alternate higher order generators for w production - ? powheg? Read about generators!
* look into efficiency calculation and why histograms turn negative if i use eff error!

Suggestions for analysis:
* z0/d0 vs nvtx plots
* charge mis-id plots
* z tag-probe vs muon p (not pt)
* add yields
* Efficiency unfolding - careful with different generators.
* Repeat with 2010 binning (use TTree::Draw('var >> +h'))


Suggestions for MCP:
* Add fitted-z-mass in phi/eta bins plot!
  https://indico.cern.ch/getFile.py/access?subContId=3&contribId=7&resId=1&materialId=slides&confId=157170
* Add p_cmb-p_ID feature
  https://indico.cern.ch/getFile.py/access?subContId=0&contribId=7&resId=0&materialId=slides&confId=157170
* Do Peter-style W analysis (should be easy, given what i have!)

print keysfit id/exms string modification to make sure it is correct.
* Add data-driven QCD template capability to SuData

Analysis updates:
* trigger matching (HiggsWW example)
* trigger scaling (following matching)
* jet-muon overlap
* only consider vtx[0] for vertex finding
* alpgen HFOR tool


* Check POWHEG+pythia asymmetry in last bin - compared with MC@NLO+HERWIG
* Et-miss resolution study: use Z events; project on Z pt axis (Sam Whitehead's thesis)

Consider W+jets QCD templates
MCP hits that fail - vs eta/phi in 2d (suspect specific modules)!

Muon scales:
* Investigate RooEggePdf - see if it is indeed compatible with my implementation!
  Test by fitting the same event!
* Applying absolute scale: perhaps going about it the wrong way? Use the KS statistic between data and MC
  to find the location of the peak?
* in zpeak.py: automatically apply defaults depending on region and type of muon!

MCP scales:
* Check if RooKeysPDF rho can be chosen smartly - Jahred's thesis.
* Repeat a study to verify sqrt(A*B) works if one leg in barrel, another in endcap
