TrigFTKAna

[Introduction]

TrigFTKAna is a collection of shared tools for doing analysis on ATLAS
ntuples. It was first used to study FastTracker performance with the
TrigFTKSim simulation, hence the name TrigFTKAna. It provides a simple
event loop framework for writing a simultaneous analysis of many
different data types (e.g. a variety of D3PD formats, TrigFTKSim road
and track fitter output, Athena flat ntuples, pattern bank content,
output of the now-deprecated TrigFTKLib simulation, etc.) It also
provides programs (in the ana/ directory) for various user analyses,
running common tests of the performance, making common validation
plots (e.g. of tracking efficiency, resolutions, etc.), and comparing
the TrigFTKSim output with reference histograms included with the
package which represent a known good state.

Follow these instructions to build the package.

[Building TrigFTKAna for analysis]

1. Check out TrigFTKAna like

svn co svn+ssh://svn.cern.ch/reps/atlasoff/Trigger/TrigFTK/TrigFTKAna/trunk TrigFTKAna

2. "Bootstrap"

Make sure you have a modern version of ROOT and of the Boost libraries
(available LCGCMT and the ATLAS software kits), then

cd TrigFTKAna
source ./setup.sh
./bootstrap.sh

If this worked correctly, you should now have TRIGFTKANA_BOOST_DIR
correctly set in your environment. The script tries to correctly guess
the location of various libraries, but it will inevitably fail to do
so in all cases. Manually set these variables if the script can't
figure them out. At minimum you need ROOT and Boost. If you have an
Athena kit installed at /osg, the script should have no trouble
finding them.

3. Build with "make".


[Building TrigFTKAna for FTK]

If you are interested in FTK studies, you should obtain a working
TrigFTKSim in addition to ROOT and Boost by following the instructions at
FastTrackerNewTutorial. Next, check out TrigFTKAna into the same
directory in which you checked out TrigFTKSim. In other words, if
$TESTDIR is a directory containing the TrigFTKSim subdirectory, check
out TrigFTKAna via

cd $TESTDIR

svn co svn+ssh://svn.cern.ch/reps/atlasoff/Trigger/TrigFTK/TrigFTKAna/tags/TrigFTKAna-10-05-31 TrigFTKAna

Note that the above checks out a tagged version rather than the
trunk. This page will be kept up to date with the latest recommended
tag. The version above is approximately the version used for the late
January draft of the FTK TP.

Once you've checked out the tagged version, 

cd TrigFTKAna
./bootstrap.sh
make

Extra TrigFTKAna library dependencies for FTK analysis : the library
of TrigFTKSim output classes (libftk_classes.so) and dcap. The
configuration script run by bootstrap.sh will attempt to guess the
paths to these libraries, but if it fails you'll have to set them
manually (see bootstrap.sh and setup.sh).

[Creating a sample definition]

Each TrigFTKAna program uses as input a sample definition file. Each
such file specifies the list of ntuples to load for a given
sample. You can find an example file at
test/test_EventLoop_definition.dat.bz2. After the first line
(providing a version number) the file consists of blocks like

W /path/to/wrapper/output/file
DWZ /path/to/SM/WZ/D3PD
DSGTOP /path/to/single/top/D3PD
DTOP /path/to/top/D3PD
DJMET /path/to/jet/et/miss/ntuple
DPGS /path/to/pretty/good/simulation/output
DPETER /path/to/Peter/Onyisi/ntuple
B /path/to/Jet/Tag/Ntuple
C /path/to/CBNT
L /path/to/trigftklib/output/tracks/file
N number_of_events_in_sample
R /path/to/region_0/trigftksim/roads/root/file 0
R /path/to/region_1/trigftksim/roads/root/file 1
A /path/to/TrigFTKAna/AnaEventNtuple
# ...
#
T /path/to/region_0/trigftksim/tracks/root/file 0
T /path/to/region_1/trigftksim/tracks/root/file 1
# or alternatively, instead of tacks for each region,
# load the track merger output with
T /path/to/region_1/trigftksim/roads/root/file M
# ...
E

See AnaEventMgr.cpp for the full list and format of ntuple
specifications. Each block should consist of at least one ntuple
file. All files in the block are read simultaneously and the contents
merged into an AnaEvent for the ana/ programs to process.  With the
exception of the AnaEventNtuple, a single block can contain multiple
types of ntuples; for example, one can augment a D3PD with the more
detailed tagging information in a JetTagNtuple for the same events.

You can either create your own dataset definition by hand, use the
scripts/ provided, or for FTK studies use Anton's ftk.py -a ana to
create one for you.

[Running analyses]

Each analysis is implemented as an executable in the ana/ directory
which writes output a ROOT file. A script "ana.pl" is provided to
perform batch submission to the UC Tier 3, and it can be easily
modified to submit to other batch managers or the grid.

For example, once you have a sample definition providing FTK wrapper,
TrigFTKLib, and TrigFTKSim ntuples, the plots in Antonio's June 16
2009 FTK meeting talk can be made as follows:

ana/ana_standard_overview -i sample.definition --force-output-filename output.root
dgplot output.root -q --batch scripts/plotting/20090615_ftk_mtg_plots

The second line just runs a program which selects specific plots in
output.root, does some overlaying, and writes the final plots as png
files to the current directory.

